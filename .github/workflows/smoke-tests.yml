name: Smoke Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

# Skip duplicate runs when PR is created from the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-solution-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore entire solution
      run: dotnet restore PortfolioMakeover.sln

    - name: Build entire solution
      run: dotnet build PortfolioMakeover.sln --configuration Release --no-restore

    - name: Test solution build
      run: dotnet build PortfolioMakeover.sln --configuration Release --no-restore --verbosity minimal
  test-docker-builds:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Test API Docker build
      run: |
        docker build -f API/Dockerfile -t portfolio-api:test .

    - name: Test Frontend Docker build
      run: |
        docker build -f UI/Dockerfile -t portfolio-frontend:test .

    - name: Test GitHub Sync Docker build
      run: |
        docker build -f BackgroundWorkers/GitHubSync/Dockerfile -t github-sync:test .

  test-k8s-manifests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Save Digital Ocean kubeconfig
      run: doctl kubernetes cluster kubeconfig save ${{ secrets.DIGITALOCEAN_CLUSTER_NAME }}

    - name: Validate K8s manifests
      run: |
        echo "Validating Kubernetes manifests against cluster..."
        
        # Validate each manifest against the actual cluster
        kubectl apply --dry-run=server -f k8s/redis.yaml
        kubectl apply --dry-run=server -f k8s/api.yaml
        kubectl apply --dry-run=server -f k8s/frontend.yaml
        kubectl apply --dry-run=server -f k8s/ghost.yaml
        kubectl apply --dry-run=server -f k8s/portfolio-ingress.yaml
        kubectl apply --dry-run=server -f k8s/github-sync-cronjob.yaml
        
        echo "All K8s manifests are valid!"
